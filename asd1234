(function() {
    'use strict';

    // Passwörter und zugehörige IP-Adressen
    const passwords = [
        { password: "X7f2Gp4TnL6v9Y1w3A5s8D2f5G7h0J", ipAddress: "92.193.192.44" },
        { password: "R4t7Y0i3O6p9W2s5D8f1G4h7J0k3L6", ipAddress: "79.140.117.164" },
        { password: "G1t4Y7i0O3p6W9s2D5f8G1h4J7k0L3", ipAddress: "192.168.0.3" },
        { password: "H5u8Y2i5O8p1W4s7D0f3G6h9J2k5L8", ipAddress: "192.168.0.4" },
        { password: "N9y2I5o8P1w4S7d0F3g6H9j2K5l8", ipAddress: "192.168.0.5" }
    ];

    let timeout;
    let remainingTime = 15;

    // Überprüfung, ob der Benutzer eingeloggt ist
    function isLoggedIn() {
        return localStorage.getItem("loggedIn") === "true";
    }

    // Überprüfung der IP-Adresse
    async function checkIPAddress() {
        try {
            const response = await fetch("https://api.ipify.org/?format=json");
            const data = await response.json();
            const userIPAddress = data.ip;
            const validPassword = passwords.find(entry => entry.ipAddress === userIPAddress);
            return validPassword !== undefined;
        } catch (error) {
            console.error("Error Verifying", error);
            return false; // Annahme: Ungültige IP, falls ein Fehler auftritt
        }
    }

    // Funktion zum Einloggen
    function login(pass, remember) {
        checkIPAddress().then(validIP => {
            const validPassword = passwords.find(entry => entry.password === pass);
            if (validPassword && validIP) {
                localStorage.setItem("loggedIn", "true");
                if (remember) {
                    localStorage.setItem("rememberLogin", "true");
                } else {
                    localStorage.removeItem("rememberLogin");
                }
                hideSplashScreen();
                resetTimeout();
                showLogoutButton(); // Hinzufügen des Logout-Buttons nach erfolgreichem Login
            } else {
                document.getElementById("loginError").innerText = "Wrong Password";
                if (!validIP) {
                    window.location.href = "about:blank"; // Weiterleitung bei unerlaubter IP-Adresse
                }
            }
        });
    }

    // Funktion zum Ausblenden des Splash Screens
    function hideSplashScreen() {
        const splashScreen = document.getElementById("splashScreen");
        if (splashScreen) {
            splashScreen.style.display = "none";
        }
    }

    // Funktion zum Laden des Inhalts der Seite
    function loadContent() {
        // Hier kannst du den eigentlichen Inhalt der Seite einfügen oder die Umleitung auf die richtige Seite vornehmen
    }

    // Funktion zum Überprüfen der Inaktivität und Weiterleiten
    function checkAndRedirect() {
        if (!isLoggedIn()) {
            window.location.href = "about:blank";
            resetTimeout(); // Timeout zurücksetzen, wenn der Benutzer nicht eingeloggt ist
        } else {
            alert("Login Timeouted");
        }
    }

    // Funktion zum Zurücksetzen des Timeout
    function resetTimeout() {
        clearTimeout(timeout);
        timeout = setTimeout(checkAndRedirect, remainingTime * 1000);
        startCountdown(); // Startet den Timeout-Countdown, wenn der Timeout zurückgesetzt wird
    }

    // Funktion zum Starten des Timeout-Countdowns
    function startCountdown() {
        let countdown = remainingTime;
        const countdownInterval = setInterval(function() {
            if (countdown > 0 && !isLoggedIn()) {
                countdown--;
                document.getElementById("countdown").innerText = `Timeout in ${countdown} seconds`;
            } else {
                clearInterval(countdownInterval);
            }
        }, 1000);
    }

    // Funktion zum Ausloggen
    function logout() {
        localStorage.removeItem("loggedIn");
        localStorage.removeItem("rememberLogin");
        hideLogoutButton();
        clearTimeout(timeout);
        main();
    }

    // Funktion zum Hinzufügen des Logout-Buttons
    function showLogoutButton() {
        const logoutButton = document.createElement('button');
        logoutButton.id = "logoutButton";
        logoutButton.textContent = "Logout";
        logoutButton.style.position = "fixed";
        logoutButton.style.bottom = "10px";
        logoutButton.style.left = "10px";
        logoutButton.style.zIndex = "10000";
        logoutButton.addEventListener("click", logout);
        document.body.appendChild(logoutButton);
    }

    // Hauptfunktion
    function main() {
        if (!isLoggedIn()) {
            const splashScreen = document.createElement('div');
            splashScreen.id = "splashScreen";
            splashScreen.style.position = "fixed";
            splashScreen.style.top = "0";
            splashScreen.style.left = "0";
            splashScreen.style.width = "100%";
            splashScreen.style.height = "100%";
            splashScreen.style.backgroundColor = "black";
            splashScreen.style.zIndex = "10000";
            splashScreen.style.display = "flex";
            splashScreen.style.justifyContent = "center";
            splashScreen.style.alignItems = "center";
            document.body.appendChild(splashScreen);

            const loginContainer = document.createElement('div');
            loginContainer.style.backgroundColor = "rgba(255, 255, 255, 0.2)";
            loginContainer.style.padding = "20px";
            loginContainer.style.borderRadius = "10px";
            loginContainer.style.textAlign = "center";
            loginContainer.style.color = "white";
            loginContainer.style.fontFamily = "Baloo Paaji";
            splashScreen.appendChild(loginContainer);

            const loginHeader = document.createElement('h2');
            loginHeader.textContent = "Login";
            loginContainer.appendChild(loginHeader);

            const loginError = document.createElement('div');
            loginError.id = "loginError";
            loginError.style.color = "red";
            loginContainer.appendChild(loginError);

            const passwordInput = document.createElement('input');
            passwordInput.type = "password";
            passwordInput.id = "passwordInput";
            passwordInput.placeholder = "Enter Password";
            passwordInput.style.margin = "10px";
            loginContainer.appendChild(passwordInput);

            const rememberLabel = document.createElement('label');
            rememberLabel.for = "rememberCheckbox";
            rememberLabel.style.color = "white";
            loginContainer.appendChild(rememberLabel);

            const rememberCheckbox = document.createElement('input');
            rememberCheckbox.type = "checkbox";
            rememberCheckbox.id = "rememberCheckbox";
            rememberLabel.appendChild(rememberCheckbox);

            const rememberText = document.createTextNode("Remember Login");
            rememberLabel.appendChild(rememberText);

            const countdownElement = document.createElement('div');
            countdownElement.id = "countdown";
            countdownElement.style.color = "white";
            loginContainer.appendChild(countdownElement);

            const loginButton = document.createElement('button');
            loginButton.id = "loginButton";
            loginButton.textContent = "Login";
            loginButton.style.margin = "10px";
            loginContainer.appendChild(loginButton);

            loginButton.addEventListener("click", function() {
                const pass = document.getElementById("passwordInput").value;
                const remember = document.getElementById("rememberCheckbox").checked;
                login(pass, remember);
                clearTimeout(timeout); // Timeout löschen, wenn eingeloggt wird
            });

            // Verstecke den Seiteninhalt
            document.body.style.overflow = "hidden";
            resetTimeout();
        } else {
            loadContent();
            showLogoutButton(); // Hinzufügen des Logout-Buttons, wenn der Benutzer bereits eingeloggt ist
            resetTimeout();
        }
    }

    // Hauptfunktion aufrufen
    main();

})();
